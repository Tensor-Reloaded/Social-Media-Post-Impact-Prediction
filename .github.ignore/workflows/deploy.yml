name: Deploy

on:
  workflow_call:
    inputs:
      artifact_name:
        description: 'Artifact name'
        required: true
        type: string
      service_name:
        description: 'Name of the AWS cluster service'
        required: true
        type: string
      cluster_name:
        description: 'Name of the AWS cluster'
        required: true
        type: string
    secrets:
      aws-access-key-id:
        description: 'AWS_ACCESS_KEY_ID'
        required: true
      aws-secret-access-key:
        description: 'AWS_SECRET_ACCESS_KEY'
        required: true
      aws-region:
        description: 'AWS_DEFAULT_REGION'
        required: true
      service_repository_url:
        description: 'ECR url'
        required: true
jobs:
 push-ecr:
   runs-on: ubuntu-latest
   steps:
     - name: Set up Docker Buildx
       id: buildx
       uses: docker/setup-buildx-action@v1
     - name: Configure AWS credentials
       uses: aws-actions/configure-aws-credentials@v1
       with:
         aws-access-key-id: ${{secrets.aws-access-key-id}}
         aws-secret-access-key: ${{secrets.aws-secret-access-key}}
         aws-region: ${{secrets.aws-region}}
     - name: Login to Amazon ECR
       uses: aws-actions/amazon-ecr-login@v1
     - name: Download artifact
       uses: actions/download-artifact@v2
       with:
         name: ${{inputs.artifact_name}}
     - run: docker load --input image.tar
     - run: docker push ${{secrets.service_repository_url}}
 restart-services:
   runs-on: ubuntu-latest
   needs: push-ecr
   steps:
     - name: Configure AWS credentials
       uses: aws-actions/configure-aws-credentials@v1
       with:
         aws-access-key-id: ${{secrets.aws-access-key-id}}
         aws-secret-access-key: ${{secrets.aws-secret-access-key}}
         aws-region: ${{secrets.aws-region}}
     - run: aws ecs update-service --force-new-deployment --service ${{inputs.service_name}} --cluster ${{inputs.cluster_name}}
